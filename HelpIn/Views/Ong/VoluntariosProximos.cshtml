@model List<(HelpIn.Models.Voluntario voluntario, double distanciaKm)>
@{
    ViewData["Title"] = "Voluntários Próximos";
}

<style>
    body {
        background-color: #0D1117;
        color: #FFFFFF;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        padding: 0;
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
    }

    h2 {
        font-size: 2rem;
        font-weight: bold;
        margin-bottom: 20px;
        text-align: center;
    }

    .vol-card {
        background-color: #161B22;
        border-radius: 12px;
        padding: 16px;
        margin-bottom: 16px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        transition: transform 0.2s ease;
    }

    .vol-card:hover {
        transform: translateY(-5px);
    }

    .vol-name {
        font-size: 1.3rem;
        font-weight: 600;
        margin-bottom: 8px;
    }

    .vol-distance {
        font-size: 1rem;
        color: #58A6FF;
        margin-bottom: 4px;
    }

    .vol-interest {
        font-size: 0.95rem;
        color: #8B949E;
        margin-bottom: 12px;
    }

    .btn-ver-mais {
        background-color: #238636;
        color: white;
        padding: 8px 16px;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 500;
        transition: background-color 0.2s ease;
    }

    .btn-ver-mais:hover {
        background-color: #2EA043;
    }

    .pagination {
        text-align: center;
        margin-top: 20px;
    }

    .pagination a {
        color: #58A6FF;
        margin: 0 8px;
        text-decoration: none;
        font-weight: 500;
    }
</style>

<div class="container">
    @functions {
        private static readonly string[] AvatarColors = new[] {
            "#FF6B6B", "#F3A712", "#3DB2FF", "#6BCB77", "#FFC93C", "#DA77F2", "#FF9F1C", "#A3A1FB", "#43AA8B", "#F72585"
        };

        private string GetColorFor(string nome)
        {
            int hash = nome.GetHashCode();
            int index = Math.Abs(hash % AvatarColors.Length);
            return AvatarColors[index];
        }
    }

    <h2>Voluntários Próximos</h2>

   @foreach (var item in Model)
    {
        var avatarColor = GetColorFor(item.voluntario.Nome);
        var iniciais = string.Join("", item.voluntario.Nome
            .Split(" ")
            .Where(w => !string.IsNullOrWhiteSpace(w))
            .Take(2)
            .Select(w => w[0])).ToUpper();

        <div class="vol-card">
            <div class="avatar" style="background-color:@avatarColor">
                @iniciais
            </div>
            <div class="vol-info">
                <div class="vol-name">@item.voluntario.Nome</div>
                <div class="vol-distance">@item.distanciaKm.ToString("F1") km</div>
                <div class="vol-interest">Interesse: @item.voluntario.InteresseAtuacao</div>
                <a class="btn-ver-mais" href="@Url.Action("Detalhes", "Voluntario", new { id = item.voluntario.Id })">Ver mais</a>
            </div>
        </div>
    }

    <div class="pagination">
        Página @ViewBag.CurrentPage de @ViewBag.TotalPages
        <br />

        @if (ViewBag.CurrentPage > 1)
        {
            <a href="?page=@(ViewBag.CurrentPage - 1)">Anterior</a>
        }
        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
        {
            <a href="?page=@(ViewBag.CurrentPage + 1)">Próxima</a>
        }
    </div>
</div>
